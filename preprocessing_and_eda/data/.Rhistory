# Ensure Mortality is a factor for logistic regression
data$Mortality <- as.factor(data$Mortality)
# Perform unadjusted logistic regression for each covariate
unadjusted_results <- lapply(names(data)[-8], function(var) {
formula <- as.formula(paste("Mortality ~", var))
glm(formula, data = data, family = "binomial")
})
# Perform adjusted logistic regression with all covariates
adjusted_model <- glm(Mortality ~ Age + Smoker + Diabetes + Hypertension + BMI + Exercise + Cholesterol,
data = data, family = "binomial")
# Function to extract results
extract_results <- function(model, covariates = NULL) {
estimates <- summary(model)$coefficients
covariates <- if (is.null(covariates)) rownames(estimates)[-1] else covariates
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
Covariate = covariates,
OR = round(odds_ratios, 2),
`95% CI` = paste0("(", round(ci_lower, 2), "-", round(ci_upper, 2), ")")
)
}
# Extract unadjusted results into a table
covariates <- names(data)[-8]  # Exclude the outcome variable
unadjusted_table <- do.call(rbind, lapply(seq_along(unadjusted_results), function(i) {
extract_results(unadjusted_results[[i]], covariates[i])
}))
# Extract adjusted results into a table
adjusted_table <- extract_results(adjusted_model, covariates)
# Ensure both tables have the same number of rows
if (nrow(unadjusted_table) != nrow(adjusted_table)) {
stop("Number of rows in unadjusted and adjusted results do not match!")
}
# Combine unadjusted and adjusted results into a single formatted table
combined_table <- data.frame(
Covariate = unadjusted_table$Covariate,  # Covariates
`Unadjusted OR` = unadjusted_table$OR,   # Unadjusted OR
`Adjusted OR` = adjusted_table$OR,       # Adjusted OR
`95% CI` = adjusted_table$`95% CI`       # 95% CI for adjusted OR
)
set.seed(1234)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
Covariate = rownames(estimates)[-1],
OR = round(odds_ratios, 2),
`95% CI` = paste0("(", round(ci_lower, 2), "-", round(ci_upper, 2), ")")
)
}
# Unadjusted models
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
# Combine unadjusted results into a single table
unadjusted_table <- do.call(rbind, unadjusted_results)
unadjusted_table$Type <- "Unadjusted"
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
adjusted_table$Type <- "Adjusted"
# Combine unadjusted and adjusted results
final_table <- rbind(unadjusted_table, adjusted_table)
# Print the final table
print(final_table)
set.seed(121)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
Covariate = rownames(estimates)[-1],
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Unadjusted models
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
# Combine unadjusted results into a single table
unadjusted_table <- do.call(rbind, unadjusted_results)
colnames(unadjusted_table)[2] <- "Unadjusted OR"  # Rename OR column for clarity
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
colnames(adjusted_table)[2] <- "Adjusted OR"  # Rename OR column for clarity
# Combine into a single formatted table
formatted_table <- merge(unadjusted_table[, c("Covariate", "Unadjusted OR")],
adjusted_table[, c("Covariate", "Adjusted OR", "CI Lower", "CI Upper")],
by = "Covariate")
# Add 95% CI column
formatted_table$`95% CI` <- paste0("(", formatted_table$`CI Lower`, "-", formatted_table$`CI Upper`, ")")
formatted_table <- formatted_table[, c("Covariate", "Unadjusted OR", "Adjusted OR", "95% CI")]
# Print the formatted table
print(formatted_table)
set.seed(1212)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
covariates <- rownames(estimates)[-1]
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
Covariate = covariates,
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Unadjusted models
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
# Combine unadjusted results into a single table
unadjusted_table <- do.call(rbind, unadjusted_results)
colnames(unadjusted_table)[2] <- "Unadjusted OR"  # Rename OR column for clarity
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
colnames(adjusted_table)[2] <- "Adjusted OR"  # Rename OR column for clarity
# Combine unadjusted and adjusted results into a single formatted table
formatted_table <- merge(unadjusted_table[, c("Covariate", "Unadjusted OR")],
adjusted_table[, c("Covariate", "Adjusted OR", "CI Lower", "CI Upper")],
by = "Covariate", all = TRUE)
set.seed(121)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
covariates <- rownames(estimates)[-1]
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
Covariate = covariates,
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Unadjusted models
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
# Combine unadjusted results into a single table
unadjusted_table <- do.call(rbind, unadjusted_results)
colnames(unadjusted_table)[2] <- "Unadjusted OR"  # Rename OR column for clarity
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
colnames(adjusted_table)[2] <- "Adjusted OR"  # Rename OR column for clarity
# Check if adjusted_table has all expected columns
expected_cols <- c("Covariate", "Adjusted OR", "CI Lower", "CI Upper")
if (!all(expected_cols %in% colnames(adjusted_table))) {
stop("Adjusted table does not have the expected columns!")
}
# Combine unadjusted and adjusted results into a single formatted table
formatted_table <- merge(unadjusted_table[, c("Covariate", "Unadjusted OR")],
adjusted_table[, expected_cols],
by = "Covariate", all = TRUE)
# Add 95% CI column
formatted_table$`95% CI` <- paste0("(", formatted_table$`CI Lower`, "-", formatted_table$`CI Upper`, ")")
formatted_table <- formatted_table[, c("Covariate", "Unadjusted OR", "Adjusted OR", "95% CI")]
# Print the formatted table
print(formatted_table)
set.seed(121121)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
covariates <- rownames(estimates)[-1]
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
Covariate = covariates,
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Unadjusted models
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
# Combine unadjusted results into a single table
unadjusted_table <- do.call(rbind, unadjusted_results)
colnames(unadjusted_table)[2] <- "Unadjusted OR"  # Rename OR column for clarity
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
colnames(adjusted_table)[2] <- "Adjusted OR"  # Rename OR column for clarity
# Check if adjusted_table has all expected columns
expected_cols <- c("Covariate", "Adjusted OR", "CI Lower", "CI Upper")
if (!all(expected_cols %in% colnames(adjusted_table))) {
stop("Adjusted table does not have the expected columns!")
}
set.seed(1211211)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Calculate unadjusted ORs
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
unadjusted_table <- do.call(rbind, unadjusted_results)
unadjusted_table$Covariate <- covariates  # Add covariate names
unadjusted_table <- unadjusted_table[, c("Covariate", "OR", "CI Lower", "CI Upper")]
set.seed(1331)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
data$Mortality <- as.factor(data$Mortality)  # Convert Mortality to a factor
# List of covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# Function to calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Unadjusted models
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
unadjusted_table <- do.call(rbind, unadjusted_results)
unadjusted_table$Covariate <- covariates  # Add covariate names
colnames(unadjusted_table) <- c("Unadjusted OR", "CI Lower", "CI Upper", "Covariate")
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
adjusted_table$Covariate <- covariates  # Add covariate names
colnames(adjusted_table) <- c("Adjusted OR", "CI Lower", "CI Upper", "Covariate")
# Combine results into a single table
final_table <- cbind(
Covariate = unadjusted_table$Covariate,
`Unadjusted OR` = unadjusted_table$`Unadjusted OR`,
`Adjusted OR` = adjusted_table$`Adjusted OR`,
`95% CI` = paste0("(", adjusted_table$`CI Lower`, "-", adjusted_table$`CI Upper`, ")")
)
# Print the final table
print(final_table)
# Save the table to a CSV file for formatting in Overleaf
write.csv(final_table, "results_table.csv", row.names = FALSE)
set.seed(1331)
# Number of observations
n <- 10000
# Simulate data
data <- data.frame(
Age = rnorm(n, mean = 40, sd = 5),  # Continuous: Age around 40
Smoker = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.7, 0.3)),  # Binary: Non-smoker (0), Smoker (1)
Diabetes = sample(c(0, 1), size = n, replace = TRUE, prob = c(0.8, 0.2)), # Binary: No Diabetes (0), Diabetes (1)
Hypertension = rnorm(n, mean = 120, sd = 15),  # Continuous: Blood pressure
BMI = rnorm(n, mean = 25, sd = 5),  # Continuous: BMI
Exercise = rnorm(n, mean = 3, sd = 1),  # Continuous: Hours of exercise per week
Cholesterol = rnorm(n, mean = 200, sd = 40)  # Continuous: Cholesterol level
)
# Create the binary outcome: Mortality
log_odds <- with(data,
(Age / 50) * 1.2 +
Smoker * 1.3 +
Diabetes * 1.4 +
(Hypertension / 140) * 1.2 +
(BMI / 30) * 1.1 +
(Exercise / 5) * -0.8 +
(Cholesterol / 240) * 1.3)
data$Mortality <- rbinom(n, 1, plogis(log_odds))  # Generate Mortality as a binary variable
# covariates
covariates <- c("Age", "Smoker", "Diabetes", "Hypertension", "BMI", "Exercise", "Cholesterol")
# calculate ORs and 95% CIs
calculate_or <- function(model) {
estimates <- summary(model)$coefficients
odds_ratios <- exp(estimates[-1, 1])
ci_lower <- exp(estimates[-1, 1] - 1.96 * estimates[-1, 2])
ci_upper <- exp(estimates[-1, 1] + 1.96 * estimates[-1, 2])
data.frame(
OR = round(odds_ratios, 2),
`CI Lower` = round(ci_lower, 2),
`CI Upper` = round(ci_upper, 2)
)
}
# Unadjusted model
unadjusted_results <- lapply(covariates, function(var) {
formula <- as.formula(paste("Mortality ~", var))
model <- glm(formula, data = data, family = "binomial")
calculate_or(model)
})
unadjusted_table <- do.call(rbind, unadjusted_results)
unadjusted_table$Covariate <- covariates  # Add covariate names
colnames(unadjusted_table) <- c("Unadjusted OR", "CI Lower", "CI Upper", "Covariate")
# Adjusted model
adjusted_model <- glm(Mortality ~ ., data = data[, c(covariates, "Mortality")], family = "binomial")
adjusted_table <- calculate_or(adjusted_model)
adjusted_table$Covariate <- covariates  # Add covariate names
colnames(adjusted_table) <- c("Adjusted OR", "CI Lower", "CI Upper", "Covariate")
# Combining results into a single table
final_table <- cbind(
Covariate = unadjusted_table$Covariate,
`Unadjusted OR` = unadjusted_table$`Unadjusted OR`,
`Adjusted OR` = adjusted_table$`Adjusted OR`,
`95% CI` = paste0("(", adjusted_table$`CI Lower`, "-", adjusted_table$`CI Upper`, ")")
)
# Print the final table
print(final_table)
getwd()
setwd('/Users/eeshachitnis/preprocessing_and_eda/src')
setwd('/Users/eeshachitnis/preprocessing_and_eda/data')
